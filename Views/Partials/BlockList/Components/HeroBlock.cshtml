@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Core.Models.Blocks.BlockListItem>
@{
    var content = Model.Content as HeroBlock;
}
<div class="relative bg-gray-800 overflow-hidden">
    <div class="hidden sm:block sm:absolute sm:inset-0">
        <svg class="absolute bottom-0 right-0 transform translate-x-1/2 mb-48 text-gray-700 lg:top-0 lg:mt-28 lg:mb-0 xl:transform-none xl:translate-x-0" width="364" height="384" viewBox="0 0 364 384" fill="none">
            <defs>
                <pattern id="eab71dd9-9d7a-47bd-8044-256344ee00d0" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <rect x="0" y="0" width="4" height="4" fill="currentColor" />
                </pattern>
            </defs>
            <rect width="364" height="384" fill="url(#eab71dd9-9d7a-47bd-8044-256344ee00d0)" />
        </svg>
    </div>
    <div class="relative pt-6 pb-12 sm:pb-32">
        <nav class="relative max-w-screen-xl mx-auto flex items-center justify-between px-4 sm:px-6">
            <div class="flex items-center flex-1">
                <div class="flex items-center justify-between w-full md:w-auto">
                    <a href="#" aria-label="Home">
                        <img class="h-8 w-auto sm:h-10" src="./images/logo-16.svg" alt="Logo">
                    </a>
                </div>
            </div>
        </nav>

        <main class="mt-8 sm:mt-16 md:mt-20 lg:mt-24">
            <div class="mx-auto max-w-screen-xl">
                <div class="lg:grid lg:grid-cols-12 lg:gap-8">
                    <div class="px-4 sm:px-6 sm:text-center md:max-w-2xl md:mx-auto lg:col-span-6 lg:text-left lg:flex lg:items-center">
                        <div>
                            @if (!string.IsNullOrWhiteSpace(content.HeroTag))
                            {
                                <span class="px-3 py-0.5 text-white text-xs font-semibold leading-5 uppercase tracking-wide bg-indigo-600 rounded-full">@content.HeroTag</span>
                            }

                            <h1 class="mt-4 text-4xl tracking-tight leading-10 font-extrabold text-white sm:mt-5 sm:leading-none sm:text-6xl lg:mt-6 lg:text-5xl xl:text-6xl">
                                @for (var i = 1; i <= content.Heading.Count(); i++)
                                {
                                    var line = content.Heading.ElementAt(i - 1);
                                    if (string.IsNullOrWhiteSpace(line)) { continue; }
                                    if (i % 2 == 0)
                                    {
                                        <span class="text-red-400">@line</span>
                                    }
                                    else
                                    {
                                        @line
                                    }
                                }
                            </h1>
                            @if (!string.IsNullOrWhiteSpace(content.Summary))
                            {
                                <p class="mt-3 text-base text-gray-300 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl">
                                    @content.Summary
                                </p>
                            }
                            @if (content.Icons.Any())
                            {
                                var icons = content.Icons.OfType<Umbraco.Core.Models.Blocks.BlockListItem>().First().Content as IconBlock;
                                if (!string.IsNullOrWhiteSpace(icons.Title))
                                {
                                    <p class="mt-8 text-sm text-white uppercase tracking-wide font-semibold sm:mt-10">Used by</p>
                                }
                                <div class="mt-5 w-full sm:mx-auto sm:max-w-lg lg:ml-0">
                                    <div class="flex flex-wrap items-start justify-between">
                                        @foreach (var icon in icons.Icons)
                                        {
                                            <div class="flex justify-center px-1">
                                                <img class="h-9 sm:h-10" src="@icon.Url()" alt="@icon.Value(Image.GetModelPropertyType(x => x.AltText).Alias)">
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    @if (content.Form != null)
                    {
                        <div class="mt-12 sm:mt-16 lg:mt-0 lg:col-span-6">
                            <div class="bg-white sm:max-w-md sm:w-full sm:mx-auto sm:rounded-lg sm:overflow-hidden">
                                <div class="px-4 py-8 sm:px-10">
                                    <div class="mt-6">
                                        @Umbraco.RenderMacro("renderUmbracoForm", new { FormGuid = content.Form, FormTheme = "landingPage", ExcludeScripts = "1" })
                                    </div>
                                    @if (!string.IsNullOrWhiteSpace(content.FormTerms.ToString()))
                                    {
                                        <div class="px-4 py-6 bg-gray-50 border-t-2 border-gray-200 sm:px-10">
                                            @(content.FormTerms
                                            .ApplyClass("//p", "text-xs leading-5 text-gray-500")
                                            .ApplyClass("//a", "font-medium text-gray-900 hover:underline"))
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </main>
    </div>
</div>